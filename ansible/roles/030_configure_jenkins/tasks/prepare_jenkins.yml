---

- name: Configure Jenkins
  block:
    - name: 10 - set variables 
      set_fact:
        deploy_pipeline: "deploy_pipeline"
        fetch_pipeline: 'fetch_data'
        jenkins_location: '/var/lib/jenkins'
        jenkins_url: "http://{{ project.private_ip }}:8080"

    - name: 20 - Set pipeline names
      set_fact:
        pipelines:
          - "{{ deploy_pipeline }}"
          - "{{ fetch_pipeline }}"

    - name: 30 - Include project properties
      include_vars:
        file: "{{ playbook_dir }}/workspace/vars.yml"

    - name: 40 - clean jenkins jobs dir 
      ansible.builtin.file:
        path: "{{ jenkins_location }}/{{ item }}"
        state: absent 
      become: true
      loop:
        - jobs
        - workspace

    - name: 50 - copy ssh key 
      copy:
        src: "/opt/weather-report-cicd/keys/{{ project.aws.key_name }}.pem"
        dest: "{{ playbook_dir }}/workspace"

    - name: 60 - Change PEM file
      shell: >
        awk 'NF {sub(/\r/, ""); printf "%s\\n",$0;}' "{{ playbook_dir }}/workspace/{{ project.aws.key_name }}.pem"
      register: result

    - name: 70 - Remove <buildsDir> from specific config.xml if present
      ansible.builtin.lineinfile:
        path: "{{ jenkins_location }}/config.xml"
        regexp: '^\s*<buildsDir>\$\{ITEM_ROOTDIR\}/builds</buildsDir>\s*$'
        state: absent

    - name: "80 - create directory for {{ item }} jobs"
      ansible.builtin.file:
        path: "{{ jenkins_location }}/jobs/{{ project.name }}-{{ item }}"
        state: directory 
      become: true
      loop: "{{ pipelines }}"

    - name: "90 - configure {{ item }} jobs from template "
      template:
        src: config.xml.j2
        dest: "{{ jenkins_location }}/jobs/{{ project.name }}-{{ item }}/config.xml"
        owner: ec2-user
        group: ec2-user
        mode: '0644'
      vars:
        pipeline_name: "{{ item }}"
      loop: "{{ pipelines }}"
      become: true

    - name: 100 - Copy project files to Jenkins workspace
      ansible.builtin.copy:
        src: /opt/weather-report-cicd/
        dest: "{{ jenkins_location }}/workspace/{{ project.name }}-{{ item }}/"
        owner: ec2-user
        group: ec2-user
        mode: '0755'
        remote_src: yes
      become: true
      loop:
        - "{{ deploy_pipeline }}"
        - "{{ fetch_pipeline }}"

    - name: "110 - Ensure {{ jenkins_location }} is owned by ec2-user user and group"
      file:
        path: "{{ jenkins_location }}"
        owner: ec2-user
        group: ec2-user
        recurse: yes
      become: true

    - name: 120 - download jenkins-cli
      get_url:
        url: "{{ jenkins_url }}/jnlpJars/jenkins-cli.jar"
        dest: "{{ jenkins_location }}"
        use_proxy: false
      become: true

    - name: 130 -Restart Jenkins to reload configuration
      ansible.builtin.service:
        name: jenkins
        state: restarted
      become: true

    - name: pause for 30 seconds to start jenkins
      pause:
        seconds: 30