---

- name: Configure Jenkins
  block:
    - name: set variables 
      set_fact:
        deploy_pipeline: "deploy_pipeline"
        fetch_pipeline: 'fetch_data'
        jenkins_location: '/var/lib/jenkins'
        jenkins_url: "http://{{ project.private_ip }}:8080"

    - name: 10 - Include project properties
      include_vars:
        file: "{{ playbook_dir }}/workspace/vars.yml"

    - name: 20 - Install JDK
      ansible.builtin.dnf:
        name: java-17-amazon-corretto
        state: present
      become: true
      delegate_to: aws
    
    - name: Ensure /tmp has at least 2GB using tmpfs
      ansible.posix.mount:
        path: /tmp
        src: tmpfs
        fstype: tmpfs
        opts: size=2g,mode=1777
        state: mounted
      become: true
      delegate_to: aws

    - name: copy ssh key 
      copy:
        src: "/opt/weather-report-cicd/keys/{{ project.aws.key_name }}.pem"
        dest: "{{ playbook_dir }}/workspace"

    - name: 60 - Change PEM file
      shell: >
        awk 'NF {sub(/\r/, ""); printf "%s\\n",$0;}' "{{ playbook_dir }}/workspace/{{ project.aws.key_name }}.pem"
      register: result
      
    - name: add jenkins credentials
      template:
        src: add_credentials.j2
        dest: /tmp/add_credentials.sh
        owner: ec2-user
        group: ec2-user 
        mode: '0755'
      vars:
        cred_id: "{{ project.name }}-jenkins"
        username: ec2-user
        password: ""
        private_key: "{{ result.stdout }}"
        jenkins_url: "{{ jenkins_url }}"

    - name: download jenkins-cli
      get_url:
        url: "{{ jenkins_url }}/jnlpJars/jenkins-cli.jar"
        dest: "{{ jenkins_location }}"
        use_proxy: false
      become: true

    - name: clean jenkins jobs dir 
      ansible.builtin.file:
        path: "{{ jenkins_location }}/jobs"
        state: absent 
      become: true

    - name: "create directory for {{ deploy_pipeline }} jobs"
      ansible.builtin.file:
        path: "{{ jenkins_location }}/jobs/{{ project.name }}-{{ deploy_pipeline }}/workspace"
        state: directory 
      become: true

    - name: "create directory for {{ fetch_pipeline }} jobs"
      ansible.builtin.file:
        path: "{{ jenkins_location }}/jobs/{{ project.name }}-{{ fetch_pipeline }}/workspace"
        state: directory 
      become: true

    - name: configure deploy jobs from template 
      template:
        src: config.xml.j2
        dest: "{{ jenkins_location }}/jobs/{{ project.name }}-{{ deploy_pipeline }}/workspace/config.xml"
        owner: jenkins
        group: jenkins
        mode: '0644'
      vars:
        pipeline_name: "{{ deploy_pipeline }}"
      become: true

    - name: configure deploy jobs from template 
      template:
        src: config.xml.j2
        dest: "{{ jenkins_location }}/jobs/{{ project.name }}-{{ fetch_pipeline }}/workspace/config.xml"
        owner: jenkins
        group: jenkins
        mode: '0644'
      vars:
        pipeline_name: "{{ fetch_pipeline }}"
      become: true

    - name: Restart Jenkins to reload configuration
      ansible.builtin.service:
        name: jenkins
        state: restarted
      become: true

    - name: pause for 30 seconds to start jenkins
      pause:
        seconds: 30