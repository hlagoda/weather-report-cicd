---

- name: Configure Jenkins
  block:
    - name: 10 - Include project properties
      include_vars:
        file: "{{ playbook_dir }}/workspace/vars.yml"

    - name: 20 - Install JDK
      ansible.builtin.dnf:
        name: java-17-amazon-corretto
        state: present
      become: true
    
    - name: Ensure /tmp has at least 2GB using tmpfs
      ansible.posix.mount:
        path: /tmp
        src: tmpfs
        fstype: tmpfs
        opts: size=2g,mode=1777
        state: mounted
      become: true

    - name: 30 - Create Jenkins directory
      file:
        path: /var/lib/jenkins/jobs_dsl
        state: directory
        owner: jenkins
        group: jenkins
        recurse: yes
        mode: '0755'
      delegate_to: localhost
      become: true

    - name: Upload DSL job files
      copy:
        src: jenkins/
        dest: /var/lib/jenkins/jobs_dsl/
        owner: jenkins
        group: jenkins
        mode: '0644'
      delegate_to: localhost
      become: true

    - name: Create seed job config.xml
      copy:
        content: |
          <?xml version='1.1' encoding='UTF-8'?>
          <project>
            <actions/>
            <description>Seed job to load pipeline definitions</description>
            <keepDependencies>false</keepDependencies>
            <properties/>
            <scm class="hudson.scm.NullSCM"/>
            <canRoam>true</canRoam>
            <disabled>false</disabled>
            <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
            <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
            <triggers/>
            <concurrentBuild>false</concurrentBuild>
            <builders>
              <javaposse.jobdsl.plugin.ExecuteDslScripts>
                <targets>/var/lib/jenkins/jobs_dsl/*.groovy</targets>
                <usingScriptText>false</usingScriptText>
                <ignoreExisting>false</ignoreExisting>
                <removedJobAction>IGNORE</removedJobAction>
                <removedViewAction>IGNORE</removedViewAction>
                <lookupStrategy>JENKINS_ROOT</lookupStrategy>
                <additionalClasspath/>
              </javaposse.jobdsl.plugin.ExecuteDslScripts>
            </builders>
            <publishers/>
            <buildWrappers/>
          </project>
        dest: /var/lib/jenkins/jobs/seed-job/config.xml
        owner: jenkins
        group: jenkins
        mode: '0644'
      delegate_to: localhost
      become: true
      

    # - name: 40 - Create jenkins.yml
    #   template:
    #     src: jenkins.yml.j2
    #     dest: /var/lib/jenkins/jenkins.yml
    #     owner: jenkins
    #     group: jenkins
    #     mode: '0644'
    #   vars:
    #     project_name: "{{ project.name }}"
    #   delegate_to: localhost
    #   become: true

    - name: Restart Jenkins to reload configuration
      ansible.builtin.service:
        name: jenkins
        state: restarted
      become: true
      delegate_to: localhost

    # - name: 50 - Wait for Jenkins to generate agent secret
    #   wait_for:
    #     path: "/var/lib/jenkins/nodes/{{ project.name }}-agent/secret"
    #     state: present
    #     timeout: 30
    #   delegate_to: localhost

    # - name: 60 - Read Jenkins agent secret
    #   slurp:
    #     src: "/var/lib/jenkins/nodes/{{ project.name }}-agent/secret"
    #   delegate_to: localhost
    #   register: agent_secret

    # - set_fact:
    #     jenkins_agent_secret: "{{ agent_secret['content'] | b64decode }}"

    # - name: 70 - Download Jenkins agent jar
    #   get_url:
    #     url: http://{{ project.private_ip }}:8080/jnlpJars/agent.jar
    #     dest: /opt/jenkins/agent.jar
    #   become: true

    - name: Trigger seed job to load pipelines
      uri:
        url: "http://{{ project.private_ip }}:8080/job/seed-job/build"
        method: POST
        user: "{{ project.jenkins.user }}"
        password: "{{ jenkins_token }}"
        force_basic_auth: yes
        status_code: 201
      retries: 10
      delay: 10 
      register: crumb_response 
      until: crumb_response.status == 201
      delegate_to: localhost

    - name: Wait for deploy_pipeline job to be created by seed job
      uri:
        url: "http://{{ project.private_ip }}:8080/job/deploy_pipeline/api/json"
        user: "{{ project.jenkins.user }}"
        password: "{{ jenkins_token }}"
        force_basic_auth: yes
        method: GET
        status_code: 200
      register: deploy_pipeline_check
      retries: 30
      delay: 10
      until: deploy_pipeline_check.status == 200
      delegate_to: localhost

    - name: Get Jenkins crumb
      uri:
        url: "http://{{ project.private_ip }}:8080/crumbIssuer/api/json"
        user: "{{ project.jenkins.user }}"
        password: "{{ jenkins_token }}"
        force_basic_auth: yes
        return_content: yes
      delegate_to: localhost
      register: crumb_response
      retries: 10
      delay: 10  
      until: crumb_response.status == 200

    - name: Debug Jenkins credentials before crumb fetch
      debug:
        msg: "Attempting Jenkins crumb fetch with User: '{{ project.jenkins.user }}', Token: '{{ jenkins_token }}'"
      no_log: false # Set to true if token is sensitive and you don't want it in logs for production

    - name: Parse Jenkins crumb
      set_fact:
        jenkins_crumb: "{{ crumb_response.json.crumb }}"
        jenkins_crumb_field: "{{ crumb_response.json.crumbRequestField }}"

    - name: Get agent config JSON (including secret)
      uri:
        url: "http://{{ project.private_ip }}:8080/computer/{{ project.name }}-agent/jenkins-agent.jnlp"
        user: "{{ project.jenkins.user }}"
        password: "{{ jenkins_token }}"
        # headers:
        #   "{{ jenkins_crumb_field }}": "{{ jenkins_crumb }}"
        force_basic_auth: yes
        return_content: yes
      delegate_to: localhost
      register: agent_jnlp_response

    - name: Extract secret from response
      set_fact:
        jenkins_agent_secret: "{{ (agent_jnlp_response.content | regex_findall('<argument>([a-z0-9]{64})</argument>'))[0] }}"

    - name: print secret 
      debug:
        msg: "Secret: {{ jenkins_agent_secret }}" 

    - name: Download Jenkins agent jar
      get_url:
        url: http://{{ project.private_ip }}:8080/jnlpJars/agent.jar
        dest: /opt/jenkins/agent.jar
        owner: ec2-user
        group: ec2-user
        mode: '0644'
      become: true

    - name: 80 - Create jenkins-agent.service
      template:
        src: jenkins-agent.service.j2
        dest: /etc/systemd/system/jenkins-agent.service
        mode: '0644'
      become: true
      vars:
        jenkins_agent_secret: "{{ jenkins_agent_secret }}"

    - name: 90 - Reload systemd configuration
      systemd:
        daemon_reload: yes
      become: true

    - name: 100 - Enable and start Jenkins agent service
      ansible.builtin.service:
        name: jenkins-agent
        state: started
        enabled: true
      become: true
      
    - name: 110 - Wait for Jenkins agent to be ready
      wait_for:
        host: "{{ project.private_ip }}"
        port: 8080
        timeout: 60
      delegate_to: localhost

    - name: 120 - run jenkins build tasks
      include_tasks:
        file: jenkins_build.yml